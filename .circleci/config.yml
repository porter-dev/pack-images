version: 2.1
orbs:
    pack: buildpacks/pack@0.2.4

jobs:
  create-image:
    parameters:
      dockerfile:
        description: "Dockerfile to build"
        type: string
      base_image:
        description: "The Docker image to be used in the FROM line of the Dockerfile"
        type: string
      stack_name:
        description: "The name of the stack"
        type: string
      image_file:
        description: "Local image archive file name"
        type: string
      image_tag:
        description: "Remote image tag name"
        type: string
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run: docker build -f << parameters.dockerfile >> --build-arg STACK=<< parameters.stack_name >> --build-arg BASE_IMAGE=<< parameters.base_image >> -t << parameters.image_tag >> .
      - run: docker save << parameters.image_tag >> > /tmp/workspace/<< parameters.image_file >>
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - << parameters.image_file >>
  create-pack-builder:
    parameters:
      builder_toml:
        description: "Builder toml"
        type: string
      image_file:
        description: "Local builder image archive file name"
        type: string
      image_tag:
        description: "Remote builder image name"
        type: string
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - run: &create-docker-config
          name: "Create docker config"
          command: |
            mkdir -p ~/.docker
            echo '{}' > ~/.docker/config.json
      - pack/install-pack:
          version: 0.24.1
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run: docker load < $(ls /tmp/workspace/pack-*-build.tar | head -1)
      - run: docker load < $(ls /tmp/workspace/pack-*-run.tar | head -1)
      - run:
          name: Create builder with retries
          command: |
            n=1
            until [ "$n" -ge 5 ]
            do
              pack create-builder << parameters.image_tag >> --config << parameters.builder_toml >> --pull-policy if-not-present && break
              n=$((n + 1))
              sleep $(($n * 2))
            done
      - run: docker save << parameters.image_tag >> > /tmp/workspace/<< parameters.image_file >>
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - << parameters.image_file >>
  test-getting-started-guide:
    parameters:
      language:
        description: "Language"
        type: string
      stack-tag:
        description: "The tag of the run stack (ex. '20' for heroku/heroku:20)"
        type: string
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - run: git clone https://github.com/heroku/<< parameters.language >>-getting-started.git getting_started
      - run: *create-docker-config
      - pack/install-pack:
          version: 0.24.1
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load < /tmp/workspace/pack-<< parameters.stack-tag >>-build.tar
      - run: docker load < /tmp/workspace/pack-<< parameters.stack-tag >>-run.tar
      - run: docker load < /tmp/workspace/buildpacks-<< parameters.stack-tag >>.tar
      - run: pack trust-builder heroku/buildpacks:<< parameters.stack-tag >>
      - run: pack build pack-getting-started --path getting_started --builder heroku/buildpacks:<< parameters.stack-tag >> --pull-policy never
      - run: docker run --name getting-started -d -e PORT=8080 pack-getting-started
      - run: sleep 5
      - run: docker exec getting-started true 2>/dev/null || (echo not running && docker logs getting-started && exit 1)
  test-example:
    parameters:
      example:
        description: "Example repo directory"
        type: string
      stack-tag:
        description: "The tag of the run stack (ex. '20' for heroku/heroku:20)"
        type: string
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - run: *create-docker-config
      - pack/install-pack:
          version: 0.24.1
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load < /tmp/workspace/pack-<< parameters.stack-tag >>-build.tar
      - run: docker load < /tmp/workspace/pack-<< parameters.stack-tag >>-run.tar
      - run: docker load < /tmp/workspace/buildpacks-<< parameters.stack-tag >>.tar
      - run: pack trust-builder heroku/buildpacks:<< parameters.stack-tag >>
      - run: pack build << parameters.example >> --path examples/<< parameters.example >> --builder heroku/buildpacks:<< parameters.stack-tag >> --trust-builder --pull-policy never
      - run: docker run --name pack-example -d << parameters.example >>
      - run: sleep 5
      - run: docker exec pack-example true 2>/dev/null || (echo not running && docker logs pack-example && exit 1)
  publish-image:
    parameters:
      image_file:
        description: "Name of the local image archive to publish"
        type: string
      image_tag:
        description: "Name of the dockerhub image to publish"
        type: string
      image_tag_alias:
        description: "Name of dockerhub image alias to publish"
        type: string
        default: ""
      image_tag_alias2:
        description: "Name of dockerhub image alias to publish"
        type: string
        default: ""
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - setup_remote_docker
      - run: docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
      - run:
          name: Log into additional registry
          command: |
            REGISTRY_TOKEN=$(curl -f -X POST $SERVICE_TOKEN_ENDPOINT -d "{\"username\":\"$SERVICE_TOKEN_USER_NAME\", \"password\":\"$SERVICE_TOKEN_PASSWORD\"}" -s --retry 3 | jq -r ".raw_id_token")
            echo "$REGISTRY_TOKEN" | docker login $REGISTRY_HOST -u "$REGISTRY_USER" --password-stdin
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load < /tmp/workspace/<< parameters.image_file >>
      - run: docker push << parameters.image_tag >>
      - when:
          condition: << parameters.image_tag_alias >>
          steps:
            - run: docker tag << parameters.image_tag >> << parameters.image_tag_alias >>
            - run: docker push << parameters.image_tag_alias >>
      - when:
          condition: << parameters.image_tag_alias2 >>
          steps:
            - run: docker tag << parameters.image_tag >> << parameters.image_tag_alias2 >>
            - run: docker push << parameters.image_tag_alias2 >>

workflows:
  version: 2
  build-test-publish:
    jobs: &build-test-publish-jobs
      - create-image:
          name: create-18-build-image
          dockerfile: Dockerfile.build
          base_image: heroku/heroku:18-build
          stack_name: heroku-18
          image_tag: heroku/pack:18-build
          image_file: pack-18-build.tar
      - create-image:
          name: create-18-run-image
          dockerfile: Dockerfile.run
          base_image: heroku/heroku:18
          stack_name: heroku-18
          image_tag: heroku/pack:18
          image_file: pack-18-run.tar
      - create-image:
          name: create-20-build-image
          dockerfile: Dockerfile.build
          base_image: heroku/heroku:20-build
          stack_name: heroku-20
          image_tag: heroku/pack:20-build
          image_file: pack-20-build.tar
      - create-image:
          name: create-20-run-image
          dockerfile: Dockerfile.run
          base_image: heroku/heroku:20
          stack_name: heroku-20
          image_tag: heroku/pack:20
          image_file: pack-20-run.tar
      - create-pack-builder:
          name: create-service-builder-18
          image_tag: heroku/buildpacks:18
          image_file: buildpacks-18.tar
          builder_toml: builder-18.toml
          requires:
            - create-18-run-image
            - create-18-build-image
      - create-pack-builder:
          name: create-service-builder-20
          image_tag: heroku/buildpacks:20
          image_file: buildpacks-20.tar
          builder_toml: builder-20.toml
          requires:
            - create-20-run-image
            - create-20-build-image
      - test-getting-started-guide:
          language: go
          stack-tag: "18"
          name: test-go-18
          requires:
            - create-service-builder-18
      - test-getting-started-guide:
          language: go
          stack-tag: "20"
          name: test-go-20
          requires:
            - create-service-builder-20
      - test-getting-started-guide:
          language: java
          stack-tag: "18"
          name: test-java-18
          requires:
            - create-service-builder-18
      - test-getting-started-guide:
          language: java
          stack-tag: "20"
          name: test-java-20
          requires:
            - create-service-builder-20
      - test-getting-started-guide:
          language: node-js
          stack-tag: "18"
          name: test-node-js-18
          requires:
            - create-service-builder-18
      - test-getting-started-guide:
          language: node-js
          stack-tag: "20"
          name: test-node-js-20
          requires:
            - create-service-builder-20
      - test-getting-started-guide:
          language: typescript
          stack-tag: "18"
          name: test-typescript-18
          requires:
            - create-service-builder-18
      - test-getting-started-guide:
          language: typescript
          stack-tag: "20"
          name: test-typescript-20
          requires:
            - create-service-builder-20
      - test-getting-started-guide:
          language: php
          stack-tag: "18"
          name: test-php-18
          requires:
            - create-service-builder-18
      - test-getting-started-guide:
          language: php
          stack-tag: "20"
          name: test-php-20
          requires:
            - create-service-builder-20
      - test-getting-started-guide:
          language: Python
          stack-tag: "18"
          name: test-python-18
          requires:
            - create-service-builder-18
      - test-getting-started-guide:
          language: Python
          stack-tag: "20"
          name: test-python-20
          requires:
            - create-service-builder-20
      - test-getting-started-guide:
          language: Ruby
          stack-tag: "18"
          name: test-ruby-18
          requires:
            - create-service-builder-18
      - test-getting-started-guide:
          language: Ruby
          stack-tag: "20"
          name: test-ruby-20
          requires:
            - create-service-builder-20
      - test-example:
          name: test-java-function-example-18
          example: javafunctionscaffold
          stack-tag: "18"
          requires:
            - create-service-builder-18
      - test-example:
          name: test-java-function-example-20
          example: javafunctionscaffold
          stack-tag: "20"
          requires:
            - create-service-builder-20
      - test-example:
          name: test-javascript-function-example-18
          example: javascriptfunctionscaffold
          stack-tag: "18"
          requires:
            - create-service-builder-18
      - test-example:
          name: test-javascript-function-example-20
          example: javascriptfunctionscaffold
          stack-tag: "20"
          requires:
            - create-service-builder-20
      - test-example:
          name: test-typescript-function-example-18
          example: typescriptfunctionscaffold
          stack-tag: "18"
          requires:
            - create-service-builder-18
      - test-example:
          name: test-typescript-function-example-20
          example: typescriptfunctionscaffold
          stack-tag: "20"
          requires:
            - create-service-builder-20
      - publish-image:
          name: publish-18-build-stack
          image_file: pack-18-build.tar
          image_tag: heroku/pack:18-build
          image_tag_alias: $REGISTRY_HOST/s/heroku/cnb/heroku-18:build
          requires:
            - test-java-function-example-18
            - test-javascript-function-example-18
            - test-typescript-function-example-18
            - test-go-18
            - test-java-18
            - test-node-js-18
            - test-php-18
            - test-python-18
            - test-ruby-18
            - test-typescript-18
          filters:
            branches:
              only: master
      - publish-image:
          name: publish-18-run-stack
          image_file: pack-18-run.tar
          image_tag: heroku/pack:18
          image_tag_alias: $REGISTRY_HOST/s/heroku/cnb/heroku-18:run
          requires:
            - test-java-function-example-18
            - test-javascript-function-example-18
            - test-typescript-function-example-18
            - test-go-18
            - test-java-18
            - test-node-js-18
            - test-php-18
            - test-python-18
            - test-ruby-18
            - test-typescript-18
          filters:
            branches:
              only: master
      - publish-image:
          name: publish-service-builder-18
          image_file: buildpacks-18.tar
          image_tag: heroku/buildpacks:18
          image_tag_alias: $REGISTRY_HOST/s/heroku/cnb/heroku-18:builder
          requires:
            - publish-18-build-stack
            - publish-18-run-stack
          filters:
            branches:
              only: master
      - publish-image:
          name: publish-20-build-stack
          image_file: pack-20-build.tar
          image_tag: heroku/pack:20-build
          image_tag_alias: $REGISTRY_HOST/s/heroku/cnb/heroku-20:build
          requires:
            - test-java-function-example-20
            - test-javascript-function-example-20
            - test-typescript-function-example-20
            - test-go-20
            - test-java-20
            - test-node-js-20
            - test-php-20
            - test-python-20
            - test-ruby-20
            - test-typescript-20
          filters:
            branches:
              only: master
      - publish-image:
          name: publish-20-run-stack
          image_file: pack-20-run.tar
          image_tag: heroku/pack:20
          image_tag_alias: $REGISTRY_HOST/s/heroku/cnb/heroku-20:run
          requires:
            - test-java-function-example-20
            - test-javascript-function-example-20
            - test-typescript-function-example-20
            - test-go-20
            - test-java-20
            - test-node-js-20
            - test-php-20
            - test-python-20
            - test-ruby-20
            - test-typescript-20
          filters:
            branches:
              only: master
      - publish-image:
          name: publish-service-builder-20
          image_file: buildpacks-20.tar
          image_tag: heroku/buildpacks:20
          image_tag_alias: $REGISTRY_HOST/s/heroku/cnb/heroku-20:builder
          image_tag_alias2: heroku/buildpacks:latest
          requires:
            - publish-20-build-stack
            - publish-20-run-stack
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master
    jobs: *build-test-publish-jobs
